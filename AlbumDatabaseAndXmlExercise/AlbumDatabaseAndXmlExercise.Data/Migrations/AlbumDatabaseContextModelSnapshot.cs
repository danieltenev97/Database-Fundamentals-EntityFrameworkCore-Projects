// <auto-generated />
using System;
using AlbumDatabaseAndXmlExercise.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AlbumDatabaseAndXmlExercise.Data.Migrations
{
    [DbContext(typeof(AlbumDatabaseContext))]
    partial class AlbumDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlbumDatabaseAndXmlExercise.Models.Categories", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("AlbumDatabaseAndXmlExercise.Models.CategoryProducts", b =>
                {
                    b.Property<int>("ProductId");

                    b.Property<int>("CategoryId");

                    b.HasKey("ProductId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("CategoryProducts");
                });

            modelBuilder.Entity("AlbumDatabaseAndXmlExercise.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuyerId");

                    b.Property<string>("Name");

                    b.Property<decimal>("Price");

                    b.Property<int>("Sellerid");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("Sellerid");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("AlbumDatabaseAndXmlExercise.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("Age");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AlbumDatabaseAndXmlExercise.Models.CategoryProducts", b =>
                {
                    b.HasOne("AlbumDatabaseAndXmlExercise.Models.Categories", "Categories")
                        .WithMany("categoryProducts")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("AlbumDatabaseAndXmlExercise.Models.Products", "products")
                        .WithMany("categoryProducts")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("AlbumDatabaseAndXmlExercise.Models.Products", b =>
                {
                    b.HasOne("AlbumDatabaseAndXmlExercise.Models.Users", "Bought")
                        .WithMany("Bought")
                        .HasForeignKey("BuyerId");

                    b.HasOne("AlbumDatabaseAndXmlExercise.Models.Users", "Sold")
                        .WithMany("Sold")
                        .HasForeignKey("Sellerid")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
